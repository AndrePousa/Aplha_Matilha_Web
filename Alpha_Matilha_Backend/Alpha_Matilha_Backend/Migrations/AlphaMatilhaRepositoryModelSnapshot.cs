// <auto-generated />
using System;
using Alpha_Matilha_Backend.Repository.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AlphaMatilhaBackend.Migrations
{
    [DbContext(typeof(AlphaMatilhaContext))]
    partial class AlphaMatilhaRepositoryModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Alpha_Matilha_Backend.Models.Address_Person", b =>
                {
                    b.Property<int>("ID_Address")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Address"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ID_Person")
                        .HasColumnType("int");

                    b.Property<string>("Name_Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number_Home")
                        .HasColumnType("int");

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zip_Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_Address");

                    b.ToTable("Address_Person");
                });

            modelBuilder.Entity("Alpha_Matilha_Backend.Models.Classes_Dog", b =>
                {
                    b.Property<int>("ID_Class")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Class"));

                    b.Property<byte>("Confirmed")
                        .HasColumnType("tinyint");

                    b.Property<int>("ID_Dog")
                        .HasColumnType("int");

                    b.Property<DateTime>("Registration_Class")
                        .HasColumnType("datetime2");

                    b.HasKey("ID_Class");

                    b.ToTable("Classes_Dog");
                });

            modelBuilder.Entity("Alpha_Matilha_Backend.Models.Dog", b =>
                {
                    b.Property<int>("ID_Dog")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Dog"));

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Breed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("End_Of_The_Contract")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ID_Client")
                        .HasColumnType("int");

                    b.Property<int?>("ID_Trainer")
                        .HasColumnType("int");

                    b.Property<string>("Imagem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Start_Training")
                        .HasColumnType("datetime2");

                    b.HasKey("ID_Dog");

                    b.ToTable("Dog");
                });

            modelBuilder.Entity("Alpha_Matilha_Backend.Models.Person", b =>
                {
                    b.Property<int>("ID_Person")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Person"));

                    b.Property<int>("Classification")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("First_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Last_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Registration_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("SEX")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Whatsapp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_Person");

                    b.ToTable("Person");
                });
#pragma warning restore 612, 618
        }
    }
}
